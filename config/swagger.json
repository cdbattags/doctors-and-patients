{
    "swagger": "2.0",
    "info": {
        "version": "0.1.0",
        "title": "doctors-and-patients",
        "description": "",
        "contact": {
            "name": "Christian Battaglia",
            "email": "christian.d.battaglia@gmail.com",
            "url": "https://github.com/cdbattags/doctors-and-patients"
        }
    },
    "basePath": "/api",
    "schemes": [
        "http",
        "https"
    ],
    "securityDefinitions": {
        "authorizationHeader": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        }
    },
    "security": [{
        "authorizationHeader": []
    }],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/me": {
            "x-swagger-router-controller": "user-controller",
            "get": {
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "Your user.",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users": {
            "x-swagger-router-controller": "user-controller",
            "get": {
                "parameters": [],
                "operationId": "getMany",
                "responses": {
                    "200": {
                        "description": "Array of users.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{userId}": {
            "x-swagger-router-controller": "user-controller",
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "User id.",
                        "type": "string",
                        "required": true
                    }
                ],
                "operationId": "getOne",
                "responses": {
                    "200": {
                        "description": "Succesfully fetch user.",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "User id.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "userData",
                        "description": "Email and password.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "age": {
                                    "type": "number"
                                },
                                "mailingAddress": {
                                    "type": "string"
                                },
                                "phone": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "operationId": "updateOne",
                "responses": {
                    "200": {
                        "description": "Successfully updated user.",      
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/login": {
            "x-swagger-router-controller": "user-controller",
            "post": {
                "parameters": [{
                        "in": "body",
                        "name": "loginData",
                        "description": "Email and password.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            },
                            "required": ["name", "email"]
                        }
                    }
                ],
                "operationId": "login",
                "responses": {
                    "200": {
                        "description": "Successfully logged in.",            
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "title": "User",
            "description": "Object that defines the User.",
            "properties": {
                "userKey": {
                    "type": "string",
                    "description": "A business key for the user."
                },
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "age": {
                    "type": "number",
                    "description": "An integer age."
                },
                "mailingAddress": {
                    "type": "string",
                    "description": "Mailing address."
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number."
                },
                "email": {
                    "type": "string",
                    "description": "Email."
                }
            },
            "example": {
                "userKey": "b8ef5ee6-eaea-4914-aaa2-edb080ff3856",
                "name": "Ron Weasley",
                "age": 25,
                "mailingAddress": "1 Hogwarts, Somewhere, UK",
                "phone": "+17705979389",
                "email": "ronnie@hogwarts.edu",
                "createdAt": "2019-01-14T16:15:00.000Z",
                "updatedAt": "2019-02-09T12:05:00.000Z"
            }
        }
    }
}
